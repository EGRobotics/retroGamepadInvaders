#include <U8glib.h>

U8GLIB_SSD1306_128X64 u8g(U8G_I2C_OPT_DEV_0 | U8G_I2C_OPT_NO_ACK | U8G_I2C_OPT_FAST);

const uint8_t invader1[] U8G_PROGMEM = {
  B00011100, B00000000,
  B01111111, B00000000,
  B11111111, B10000000,
  B10011100, B10000000,
  B11111111, B10000000,
  B00100010, B00000000,
  B01011101, B00000000,
  B10000000, B10000000,
};

const uint8_t invader2[] U8G_PROGMEM = {
  B00100001, B00000000,
  B10010010, B01000000,
  B10111111, B01000000,
  B11101101, B11000000,
  B01101101, B10000000,
  B01111111, B10000000,
  B01010010, B10000000,
  B11000000, B11000000,
};

const uint8_t invader3[] U8G_PROGMEM = {
  B00000111, B11000000,
  B00011111, B11110000,
  B00111111, B11111000,
  B01101010, B10101100,
  B11111111, B11111110,
  B00111011, B10111000,
  B00010000, B00010000,
};

const uint8_t invader4[] U8G_PROGMEM = {
  B01000100,
  B00111000,
  B01111100,
  B01010100,
  B01111100,
  B10101010,
  B10101010,
};

const uint8_t invader5[] U8G_PROGMEM = {
  B00011100, B00000000,
  B01111111, B00000000,
  B11111111, B10000000,
  B10011100, B10000000,
  B11111111, B10000000,
  B01011101, B00000000,
  B01000001, B00000000,
  B00111110, B00000000,
};

const uint8_t invader6[] U8G_PROGMEM = {
  B00010010, B00000000,
  B00111111, B00000000,
  B01111111, B10000000,
  B11101101, B11000000,
  B10111111, B01000000,
  B10111111, B01000000,
  B00010010, B00000000,
  B00110011, B00000000,
};

const uint8_t invader7[] U8G_PROGMEM = {
  B00100100,
  B00011000,
  B10111101,
  B11011011,
  B11111111,
  B10111101,
  B00100100,
  B01100110,
};

const uint8_t invader8[] U8G_PROGMEM = {
  B00011100, B00000000,
  B01111111, B00000000,
  B11011101, B10000000,
  B11111111, B10000000,
  B01100011, B00000000,
  B00111110, B00000000,
  B01100011, B00000000,
  B10000000, B10000000,
  B01100011, B00000000,
};

const uint8_t invader9[] U8G_PROGMEM = {
  B00100001, B00000000,
  B00010010, B00000000,
  B00111111, B00000000,
  B01101101, B10000000,
  B11111111, B11000000,
  B10111111, B01000000,
  B00010010, B00000000,
  B00100001, B00000000,
};

const uint8_t invader10[] U8G_PROGMEM = {
  B00100010, B00000000,
  B01111111, B00000000,
  B11001001, B10000000,
  B11111111, B10000000,
  B11111111, B10000000,
  B10101010, B10000000,
  B01010101, B00000000,
};

const uint8_t invader11[] U8G_PROGMEM = {
  B00111100,
  B01111110,
  B11011011,
  B11111111,
  B00111100,
  B01011010,
  B10000001,
};

const uint8_t invader12[] U8G_PROGMEM = {
  B00001000, B00000000,
  B00011100, B00000000,
  B00111110, B00000000,
  B01111111, B00000000,
  B11001001, B10000000,
  B11111111, B10000000,
  B00111110, B00000000,
  B01001001, B00000000,
  B10010100, B10000000,
};

const uint8_t invader13[] U8G_PROGMEM = {
  B00100100,
  B00011000,
  B10111101,
  B11011011,
  B11111111,
  B10111101,
  B10011001,
  B11000011,
};

const uint8_t invader14[] U8G_PROGMEM = {
  B00011000,
  B00111100,
  B01111110,
  B11011011,
  B11111111,
  B00100100,
  B01011010,
  B10100101,
};

const uint8_t invader15[] U8G_PROGMEM = {
  B00100010, B00000000,
  B10011100, B10000000,
  B10111110, B10000000,
  B11101011, B10000000,
  B01111111, B00000000,
  B00100010, B00000000,
  B01000001, B00000000,
};

const uint8_t gun[] U8G_PROGMEM = {
  B00001000, B00000000,
  B00001000, B00000000,
  B00000000, B00000000,
  B00001000, B00000000,
  B01111111, B00000000,
  B01111111, B00000000,
  B11111111, B10000000,
};

void setup()
{

}

void draw() {
  u8g.drawBitmapP(0, 0, 2, 8, invader1);
  u8g.drawBitmapP(10, 0, 2, 8, invader2);
  u8g.drawBitmapP(21, 0, 2, 7, invader3);
  u8g.drawBitmapP(37, 0, 1, 7, invader4);
  u8g.drawBitmapP(45, 0, 2, 8, invader5);
  u8g.drawBitmapP(55, 0, 2, 8, invader6);
  u8g.drawBitmapP(66, 0, 1, 8, invader7);
  u8g.drawBitmapP(75, 0, 2, 9, invader8);
  u8g.drawBitmapP(85, 0, 2, 8, invader9);
  u8g.drawBitmapP(95, 0, 2, 7, invader10);
  u8g.drawBitmapP(105, 0, 1, 7, invader11);
  u8g.drawBitmapP(114, 0, 2, 9, invader12);
  u8g.drawBitmapP(0, 10, 1, 8, invader13);
  u8g.drawBitmapP(10, 10, 1, 8, invader14);
  u8g.drawBitmapP(19, 10, 2, 7, invader15);
  u8g.drawBitmapP(29, 10, 2, 7, gun);
}

void loop()
{
  u8g.firstPage();
  do {
    draw();
  } while (u8g.nextPage());
  delay(1000 / 60);
}
